{"version":3,"file":"form-control.decorator.js","sourceRoot":"","sources":["../../../src/decorators/form-control.decorator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAO5D,CAAC;AAEF,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,IAA4G,EAAE,OAAqC;IAC9K,IAAI,CAAC,GAAgC,OAAO,IAAI,EAAE,CAAC;IAEnD,MAAM,CAAC,UAAC,MAAc,EAAE,QAAgB;QACvC,MAAM,CAAC,gBAAgB,CAAC,MAAM;YAC7B,GAAC,QAAQ,GAAG,gBAAgB,IAAG;gBAC9B,KAAK,EAAE;oBACN,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,CAAC,CAAC,KAAK;oBACd,WAAW,EAAE,CAAC,CAAC,WAAW;oBAC1B,UAAU,EAAE,CAAC,CAAC,UAAU;oBACxB,YAAY,EAAE,CAAC,CAAC,YAAY;iBAC5B;gBACD,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,KAAK;aACnB;gBACC,CAAC;;KACJ,CAAC;CACF,CAAC","sourcesContent":["import { ValidatorFn } from '@angular/forms';\r\nimport { FormControlType } from '../enums/form-control.enum';\r\n\r\nexport interface FormControlDecoratorOptions {\r\n\torder?: number;\r\n\tplaceholder?: string;\r\n\tvalidators?: ValidatorFn[];\r\n\tdefaultValue?: any;\r\n};\r\n\r\nexport const FormControl = (type: FormControlType.Input | FormControlType.TextArea | FormControlType.Checkbox | FormControlType.Password, options?: FormControlDecoratorOptions) => {\r\n\tlet o: FormControlDecoratorOptions = options || {};\r\n\r\n\treturn (target: Object, property: string) => {\r\n\t\tObject.defineProperties(target, {\r\n\t\t\t[property + \"-form-metadata\"]: {\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tname: property,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\torder: o.order,\r\n\t\t\t\t\tplaceholder: o.placeholder,\r\n\t\t\t\t\tvalidators: o.validators,\r\n\t\t\t\t\tdefaultValue: o.defaultValue\r\n\t\t\t\t},\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tconfigurable: false\r\n\t\t\t}\r\n\t\t} );\r\n\t};\r\n};\r\n"]}