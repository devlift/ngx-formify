{"version":3,"file":"form-control.component.js","sourceRoot":"","sources":["../../../../src/components/form-control/form-control.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,mBAAmB,MAAM,0CAA0C,CAAC;AAC3E,OAAO,YAAY,MAAM,kCAAkC,CAAC;;IAa3D;KAAgB;IAEhB,2CAAY,GAAZ,UAAc,KAAe;QAA7B,iBA0BC;QAzBA,IAAI,CAAC,GAAmB,EAAE,CAAC;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;gCAEL,CAAC;YACT,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAEpB,IAAI,OAAO,GAAiB;gBAC3B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;aACf,CAAC;YAEF,IAAM,EAAE,GAAG,IAAI,UAAU,EAAE,CAAC;YAC5B,EAAE,CAAC,gBAAgB,CAAE,MAAM,EAAE;gBAC5B,OAAO,CAAC,IAAI,GAAgB,EAAE,CAAC,MAAM,CAAC;gBACtC,CAAC,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;gBAClB,KAAK,EAAE,CAAC;gBAER,EAAE,CAAA,CAAE,KAAK,IAAI,KAAK,CAAC,MAAO,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;iBAC9B;aACD,CAAE,CAAC;YACJ,EAAE,CAAC,iBAAiB,CAAE,IAAI,CAAE,CAAC;;QApB9B,GAAG,CAAA,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;oBAA5B,CAAC;SAqBT;QAAA,CAAC;KACF;+BA3CF","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport FormControlExtended from '../../models/form-control-extended.model';\r\nimport FileExtended from '../../models/file-extended.model';\r\n\r\n@Component({\r\n\tselector: 'formify-control',\r\n\ttemplateUrl: './form-control.component.html'\r\n})\r\nexport class FormControlComponent {\r\n\t@Input() formControl: FormControlExtended;\r\n\t@Input() controlClass: string = \"\";\r\n\t@Input() controlInnerClass: string = \"\";\r\n\r\n\t@Output() onFileSelected = new EventEmitter<FileExtended[]>();\r\n\r\n\tconstructor() {}\r\n\r\n\tfileSelected( files: FileList ) {\r\n\t\tlet f: FileExtended[] = [];\r\n\t\tlet count = 0;\r\n\r\n\t\tfor( let i = 0; i < files.length; i++ ) {\r\n\t\t\tlet file = files[i];\r\n\r\n\t\t\tlet newFile: FileExtended = {\r\n\t\t\t\tlastModifiedDate: file.lastModifiedDate,\r\n\t\t\t\tname: file.name,\r\n\t\t\t\tsize: file.size,\r\n\t\t\t\ttype: file.type\r\n\t\t\t};\r\n\r\n\t\t\tconst fr = new FileReader();\r\n\t\t\tfr.addEventListener( 'load', () => {\r\n\t\t\t\tnewFile.data = <ArrayBuffer>fr.result;\r\n\t\t\t\tf.push( newFile );\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif( count == files.length ) {\r\n\t\t\t\t\tthis.onFileSelected.emit( f );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tfr.readAsArrayBuffer( file );\r\n\t\t};\r\n\t}\r\n}\r\n"]}